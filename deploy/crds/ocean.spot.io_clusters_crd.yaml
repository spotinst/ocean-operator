apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusters.ocean.spot.io
  annotations:
    helm.sh/hook: crd-install
spec:
  additionalPrinterColumns:
  - JSONPath: .status.oceanId
    description: The unique ID of the Cluster
    name: Cluster ID
    type: string
  - JSONPath: .spec.region
    description: The region of the Cluster
    name: Region
    type: string
  - JSONPath: .status.nodes.current
    description: The current number of nodes created by the Cluster
    name: Nodes
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: ocean.spot.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster consists of one or more Launch Specs and automatically scales your infrastructure.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Specification of the desired behavior of the Cluster.
          properties:
            autoScaler:
              description: AutoScaler defines the desired state of AutoScaler.
              properties:
                cooldown:
                  type: integer
                down:
                  description: AutoScalerDown defines the desired state of AutoScalerDown.
                  properties:
                    evaluationPeriods:
                      type: integer
                    maxScaleDownPercentage:
                      type: integer
                  type: object
                headroom:
                  description: AutoScalerHeadroom defines the desired state of AutoScalerHeadroom.
                  properties:
                    cpuPerUnit:
                      type: integer
                    gpuPerUnit:
                      type: integer
                    memoryPerUnit:
                      type: integer
                    numOfUnits:
                      type: integer
                  type: object
                isAutoConfig:
                  type: boolean
                isEnabled:
                  type: boolean
                resourceLimits:
                  description: AutoScalerResourceLimits defines the desired state
                    of AutoScalerResourceLimits.
                  properties:
                    maxMemoryGib:
                      type: integer
                    maxVCpu:
                      type: integer
                  type: object
              type: object
            capacity:
              description: Capacity defines the desired state of Capacity.
              properties:
                maximum:
                  format: int32
                  type: integer
                minimum:
                  format: int32
                  type: integer
                target:
                  format: int32
                  type: integer
              type: object
            compute:
              description: Compute defines the desired state of Compute.
              properties:
                launchSpecification:
                  description: LaunchSpecification defines the desired state of LaunchSpecification.
                  properties:
                    associatePublicIpAddress:
                      type: boolean
                    ebsOptimized:
                      type: boolean
                    iamInstanceProfile:
                      description: IAMInstanceProfile defines the desired state of
                        IAMInstanceProfile.
                      properties:
                        arn:
                          type: string
                        name:
                          type: string
                      type: object
                    imageId:
                      type: string
                    keyPair:
                      type: string
                    monitoring:
                      type: boolean
                    rootVolumeSize:
                      format: int32
                      type: integer
                    securityGroupIds:
                      items:
                        type: string
                      type: array
                    tags:
                      items:
                        description: Tag defines the desired state of Tag.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    userData:
                      type: string
                  type: object
                subnetIds:
                  items:
                    type: string
                  type: array
              type: object
            region:
              type: string
            strategy:
              description: Strategy defines the desired state of Strategy.
              properties:
                drainingTimeout:
                  format: int32
                  type: integer
                fallbackToOd:
                  type: boolean
                spotPercentage:
                  format: int32
                  type: integer
                utilizeReservedInstances:
                  type: boolean
              type: object
          type: object
        status:
          description: Most recently observed status of the Cluster.
          properties:
            conditions:
              description: Represents the latest available observations of the current
                state.
              items:
                description: StatusCondition contains condition information.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of the condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            details:
              description: Extended data associated with the status. This field is
                optional.
              properties:
                reconcileRequestUid:
                  description: Unique ID of the reconcile request.
                  type: string
              type: object
            nodes:
              description: Observed status of the Cluster's nodes.
              properties:
                current:
                  description: Current number of nodes created by the Cluster.
                  format: int32
                  type: integer
                maximum:
                  description: Upper limit for the number of nodes that can be created
                    by the Cluster.
                  format: int32
                  type: integer
                minimum:
                  description: Lower limit for the number of nodes that can be created
                    by the Cluster.
                  format: int32
                  type: integer
              required:
              - current
              - maximum
              - minimum
              type: object
            observedGeneration:
              description: The generation observed by the controller.
              format: int64
              type: integer
            oceanId:
              description: Unique ID of the Cluster.
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
