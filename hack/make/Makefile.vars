.EXPORT_ALL_VARIABLES:

# Make.
MAKEFLAGS                += --no-builtin-rules
.SUFFIXES:

# Shell.
SHELL                    := bash
.SHELLFLAGS              := -eu -o pipefail -c

# Utilities.
V                        := 0
Q                        := $(if $(filter 1,$(V)),,@)
TIMESTAMP                 = $(shell date -u +"%Y-%m-%dT%H:%M:%SZ")

# Directories.
ROOT_DIR                  = $(CURDIR)
HACK_DIR                  = $(ROOT_DIR)/hack
DIST_DIR                  = $(ROOT_DIR)/build/_output
TEST_DIR                  = $(ROOT_DIR)/test
TOOLS_DIR                 = $(HACK_DIR)/tools
BOILERPLATE_DIR           = $(HACK_DIR)/boilerplate
COVERAGE_DIR              = $(TEST_DIR)/coverage.$(TIMESTAMP)

# Binaries.
GO                       := GO111MODULE=on go
GO_TOOL                   = GOBIN=$(TOOLS_DIR)/bin $(GO)
GOFMT                    := gofmt
GOGEN                     = $(GO_TOOL) generate
GOIMPORTS                 = $(TOOLS_DIR)/bin/goimports
GOLINT                    = $(TOOLS_DIR)/bin/golint
GOBINDATA                 = $(TOOLS_DIR)/bin/go-bindata
CONTAINER_ENGINE         := docker
CONTAINER_GORELEASER     := goreleaser/goreleaser:v0.128-cgo

# Go.
GO_VERSION                = $(shell $(GO) version)
GO_VERSION_NUMBER         = $(shell echo $(GO_VERSION) | grep -Eo '(\d+.\d+.\d+)')
GO_MODULE                 = $(shell $(GO) list -m)
GO_LDFLAGS                = -X $(VERSION_PKG).Version=$(VERSION)
GO_LDFLAGS               += -X $(VERSION_PKG).Prerelease=$(VERSION_PRERELEASE)
GO_LDFLAGS               += -X $(VERSION_PKG).Metadata=$(VERSION_BUILD_METADATA)
PKGS                      = $(or $(PKG),$(shell $(GO) list -f {{.Dir}} ./...))
TIMEOUT                  := 30
COVERAGE_MODE            := atomic
COVERAGE_PROFILE          = $(COVERAGE_DIR)/profile.out
COVERAGE_HTML             = $(COVERAGE_DIR)/index.html

# Versioning.
GIT_BRANCH                = $(shell git rev-parse --abbrev-ref HEAD)
GIT_COMMIT                = $(shell git rev-parse --short HEAD)
GIT_DIRTY                 = $(shell test -n "`git status --porcelain`" && echo ".dirty" || true)
VERSION                   = $$(cat VERSION)
VERSION_NUMBER            = $(shell echo $(VERSION) | cut -d- -f1)
VERSION_MAJOR             = $(shell echo $(VERSION_NUMBER) | cut -d. -f1)
VERSION_MINOR             = $(shell echo $(VERSION_NUMBER) | cut -d. -f2)
VERSION_PATCH             = $(shell echo $(VERSION_NUMBER) | cut -d. -f3)
VERSION_PRERELEASE        = $(shell echo $(VERSION) | cut -d- -f2- -s)
VERSION_PRERELEASE_REV    = $(shell echo $(VERSION) | cut -d- -f2- -s | cut -d. -f2- -s)
VERSION_BUILD_METADATA    = $(GIT_COMMIT)$(GIT_DIRTY)
VERSION_PKG               = $(GO_MODULE)/internal/version

# Kubernetes and Operator SDK.
NAMESPACE                := spot
KUBECTL                  := kubectl
OPERATORSDK              := operator-sdk --verbose
OPERATOR_NAME             = $(shell echo $(GO_MODULE) | cut -d/ -f3- -s)
OPERATOR_FLAGS           := --zap-devel --zap-level 10
OPERATOR_IMAGE            = spotinst/$(OPERATOR_NAME):$(VERSION_NUMBER)
OPERATOR_DEPLOY_DIR       = $(ROOT_DIR)/deploy
OPERATOR_BUNDLE_DIR       = $(ROOT_DIR)/bundle

# Goreleaser.
define goreleaser_release
	$(CONTAINER_ENGINE) run --rm \
		-v $(ROOT_DIR):/go/src/github.com/spotinst/ocean-operator \
		-w /go/src/github.com/spotinst/ocean-operator \
		-e GITHUB_TOKEN=$(GITHUB_TOKEN) \
		-e VERSION=$(VERSION) \
		-e VERSION_NUMBER=$(VERSION_NUMBER) \
		-e VERSION_PRERELEASE=$(VERSION_PRERELEASE) \
		-e VERSION_BUILD_METADATA=$(VERSION_BUILD_METADATA) \
		-e VERSION_PKG=$(VERSION_PKG) \
		$(CONTAINER_GORELEASER) release \
			--config hack/goreleaser/$(1).yaml \
			--rm-dist \
			--debug \
			$(2)
endef
